version: '3.2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports: 
      - "2181:2181"
  
  kafka-cluster:
    image: wurstmeister/kafka:latest
    deploy:
      mode: global
      restart_policy: 
        condition: on-failure
    ports: 
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2" 
      # HOSTNAME_COMMAND: "curl http://169.254.169.254/latest/meta-data/public-hostname" # AWS Only
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 16000
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      #KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PROTOCOL_NAME: OUTSIDE
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_PROTOCOL_NAME: INSIDE
      KAFKA_CREATE_TOPICS: test1:10:3,test2:10:3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
        #{pwd}/server.properties:/opt/kafka/config/server.properties
      